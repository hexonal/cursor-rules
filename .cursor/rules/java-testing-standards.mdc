---
description: Java项目测试规范与质量保证
globs: 
alwaysApply: true
---
# Java项目测试规范与质量保证

本规范旨在统一Java项目的测试编写、覆盖率要求和质量保证标准，确保代码的可靠性、可维护性和高质量交付。

## 一、单元测试规范

### 【强制】单元测试规范
1. 测试用例编写：
   ```java
   @SpringBootTest
   public class XxxServiceTest {
       @Autowired
       private XxxService xxxService;

       @Test
       public void testXxx() {
           // 1. 准备测试数据
           XxxReq req = new XxxReq();
           req.setField("value");

           // 2. 执行测试
           XxxResp resp = xxxService.doSomething(req);

           // 3. 验证结果
           assertNotNull(resp);
           assertEquals("expected", resp.getField());
       }
   }
   ```

2. 测试覆盖要求：
   - 核心业务代码测试覆盖率不低于80%
   - 必须覆盖所有异常分支
   - 必须覆盖所有边界条件

### 【强制】测试规范
1. 单元测试
   - 测试类命名：XxxTest
   - 测试方法命名：test_方法名_场景
   - 必须包含断言
   - 必须考虑边界条件
2. 测试覆盖率
   - 分支覆盖率：>80%
   - 行覆盖率：>80%
   - 方法覆盖率：>90%
   - 类覆盖率：>90%

## 二、测试覆盖与验证

### 【强制】测试覆盖与验证
1.  **伴随测试**：任何代码修改（无论是bug修复还是功能新增）都必须伴随相应的单元测试、集成测试（如果适用）。
2.  **测试边界**：测试用例需要覆盖修改点及其直接影响的逻辑边界。对于有潜在广泛影响的修改，需要考虑更全面的端到端测试或场景测试。
3.  **回归测试**：确保修改没有破坏已有的功能。

## 三、测试质量要求

### 【强制】测试质量标准
1. 工具类测试：
   - 必须私有构造函数
   - 必须使用静态方法
   - 必须编写单元测试

2. 可维护性要求：
   - 代码必须符合阿里巴巴Java开发手册规范
   - 必须编写单元测试
   - 必须处理所有异常情况
   - 必须添加必要的注释
